{"version":3,"file":"src_app_account_account_module_ts.js","mappings":"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","sources":["./src/app/account/account-routing.module.ts","./src/app/account/account.module.ts","./src/app/account/auth/auth-routing.ts","./src/app/account/auth/auth.module.ts","./src/app/account/auth/login/login.component.ts","./src/app/account/auth/login/login.component.html","./src/app/account/auth/passwordreset/passwordreset.component.ts","./src/app/account/auth/passwordreset/passwordreset.component.html","./src/app/account/auth/reset/reset.component.ts","./src/app/account/auth/reset/reset.component.html","./src/app/account/auth/reset/service/reser-service.service.ts","./src/app/account/auth/verifcarcod/verifcarcod.component.ts","./src/app/account/auth/verifcarcod/verifcarcod.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  { path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule) },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AccountRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AccountRoutingModule } from './account-routing.module';\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    AccountRoutingModule,\r\n    AuthModule,\r\n  \r\n  ]\r\n})\r\nexport class AccountModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nimport { PasswordresetComponent } from './passwordreset/passwordreset.component';\r\n\r\nimport { ResetComponent } from './reset/reset.component';\r\n\r\nimport { VerifcarcodComponent } from './verifcarcod/verifcarcod.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'reset-password',\r\n    component: PasswordresetComponent\r\n  },\r\n  {\r\n\r\n    path: 'reset',\r\n    component: ResetComponent\r\n  },\r\n  {\r\n    path: 'verificar',\r\n    component: VerifcarcodComponent\r\n\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CarouselModule } from 'ngx-owl-carousel-o';\r\n\r\nimport { UIModule } from '../../shared/ui/ui.module';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nimport { AuthRoutingModule } from './auth-routing';\r\nimport { PasswordresetComponent } from './passwordreset/passwordreset.component';\r\nimport { ResetComponent } from './reset/reset.component';\r\nimport { VerifcarcodComponent } from './verifcarcod/verifcarcod.component';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, PasswordresetComponent, VerifcarcodComponent, ResetComponent],\r\n\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    NgbAlertModule,\r\n    UIModule,\r\n    AuthRoutingModule,\r\n    CarouselModule\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Credentials, UsuarioA } from \"./models/usuario\";\r\nimport { AutenticacionService } from \"./service/autenticacion.service\";\r\nimport { Role } from \"src/app/enum/role.enum\";\r\nimport { ReserServiceService } from \"../reset/service/reser-service.service\";\r\n\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.scss\"],\r\n})\r\n\r\n/**\r\n * Login component\r\n */\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n  error = \"\";\r\n  returnUrl: string;\r\n  psstype = \"password\";\r\n  eye = \"mdi mdi-eye-off\";\r\n  usuario!: UsuarioA;\r\n  cred: Credentials = {\r\n    correo: \"\",\r\n    password: \"\",\r\n  };\r\n  public showLoading: boolean;\r\n  probando: any;\r\n\r\n  // tslint:disable-next-line: max-line-length\r\n  constructor(\r\n    private authService: AutenticacionService,\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private resetService: ReserServiceService\r\n  ) {\r\n    this.loginForm = this.inif();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.usuario = (await this.authService.buscar())\r\n    this.usuario = this.authService.getUserFromLocalCache();\r\n    if (this.authService.isUserLoggedIn()) {\r\n      if (this.authService.hasRole(Role.ROLE_ESTUDIANTE)) {\r\n        this.router.navigateByUrl(\"default\");\r\n      }\r\n      this.router.navigateByUrl(\"dash\");\r\n    } else {\r\n      this.router.navigateByUrl(\"account/login\");\r\n    }\r\n  }\r\n  private inif(): FormGroup {\r\n    return this.formBuilder.group({\r\n      correo: [\"\", [Validators.required, Validators.email]],\r\n      password: [\"\", [Validators.required]],\r\n    });\r\n  }\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  login(): void {\r\n    this.cred = this.loginForm.value;\r\n    this.showLoading = true;\r\n    if (this.cred.correo == \"\" || this.cred.password == \"\") {\r\n      this.error = \"Correo o contraseña vacios\";\r\n      this.showLoading = false;\r\n    } else {\r\n      this.authService.login(this.cred).subscribe(\r\n        (response) => {\r\n          this.showLoading = false;\r\n        },\r\n        (err) => {\r\n          if (err.status == 406) {\r\n            this.error =\r\n              \"Usuario inactivo, si es un error contacte con el administrador\";\r\n            this.showLoading = false;\r\n          }\r\n          if (err.status == 400) {\r\n            this.error =\r\n              \"Lo sentimos, las credenciales que estas usando no son validas\";\r\n            this.showLoading = false;\r\n          }\r\n          if (err.status == 302) {\r\n            this.resetService.setCorreo(this.cred.correo);\r\n            this.router.navigate([\"account/reset\"]);\r\n            this.showLoading = false;\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n  /**PARA ALTERNAR EL BOTON DE PASSWORD */\r\n  cambiar() {\r\n    this.psstype = this.psstype === \"text\" ? \"password\" : \"text\";\r\n    this.eye =\r\n      this.eye === \"mdi mdi-eye-outline\"\r\n        ? \"mdi mdi-eye-off\"\r\n        : \"mdi mdi-eye-outline\";\r\n  }\r\n}\r\n","<div class=\"account-pages my-5 pt-sm-5\">\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-md-8 col-lg-6 col-xl-5\">\r\n        <div class=\"card overflow-hidden log\">\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"col-7 text-center mt-3\">\r\n              <img src=\"assets/images/minerva2.png\" alt=\"\" width=\"150\"class=\"img-fluid\">\r\n              <h2 class=\"mt-4 txtbl\">INICIO DE SESIÓN</h2>\r\n            </div>\r\n          </div>\r\n          <div class=\"card-body pt-0\">\r\n            <div class=\"p-2\">\r\n              <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\r\n\r\n                <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\r\n                <div class=\"mb-3\">\r\n                  <label for=\"correo\">Correo</label>\r\n                  <input type=\"correo\" formControlName=\"correo\" class=\"form-control bg-light\" id=\"correo\" placeholder=\"Ingrese correo\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.correo.errors }\" />\r\n                  <div *ngIf=\"submitted && f.correo.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.correo.errors.required\">Campo requeirdo</div>\r\n                    <div *ngIf=\"f.correo.errors.correo\">Debe ser un correo valido</div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                  <label for=\"password\">Contraseña</label>\r\n                  <div class=\"input-group auth-pass-inputgroup\">\r\n                    <input [type]=\"psstype\" class=\"form-control bg-light\" formControlName=\"password\" placeholder=\"Ingrese contraseña\"\r\n                      [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" aria-label=\"Password\"\r\n                      aria-describedby=\"password-addon\">\r\n\r\n                    <button class=\"btn btn-light ms-0\" type=\"button\" id=\"password-addon\" (click)=\"cambiar()\" >\r\n                      <i class={{eye}}></i></button>\r\n                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                      <span  *ngIf=\"f.password.errors.required\">Campo requerido</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- <div class=\"form-check\">\r\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"remember-check\">\r\n                  <label class=\"form-check-label\" for=\"remember-check\">\r\n                    Recordar\r\n                  </label>\r\n                </div> -->\r\n                <div class=\"mt-5 text-center\">\r\n                  <button class=\"btn btn-dark\">Iniciar Sesión</button>\r\n                </div>\r\n                <div class=\"mt-4 text-center\">\r\n                  <a routerLink=\"/account/reset-password\" class=\"text-muted\"><i class=\"mdi mdi-lock mr-1\"></i>\r\n                    Recuperar contraseña</a>\r\n                </div>\r\n              </form>\r\n              <div *ngIf=\"showLoading\" class=\"spinner-overlay\">\r\n                <div  class=\"spinner-border text-primary m-1\" role=\"status\">\r\n                  <span class=\"sr-only\">Loading...</span>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- <div class=\"mt-5 text-center\">\r\n          <p>¿No tienes ? <a routerLink=\"/account/signup\" class=\"fw-medium text-primary\"> Signup\r\n              now\r\n            </a>\r\n          </p>\r\n        </div> -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- end container -->\r\n</div>\r\n<!-- end page -->\r\n","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AutenticacionService } from '../login/service/autenticacion.service';\r\nimport Swal from 'sweetalert2';\r\nimport { UsuarioA } from '../login/models/usuario';\r\nimport { Subject } from 'rxjs';\r\nimport { VerifcarcodComponent } from '../verifcarcod/verifcarcod.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n@Component({\r\n  selector: 'app-passwordreset',\r\n  templateUrl: './passwordreset.component.html',\r\n  styleUrls: ['./passwordreset.component.scss']\r\n})\r\n\r\n/**\r\n * Reset-password component\r\n */\r\nexport class PasswordresetComponent implements OnInit {\r\n\r\n  resetForm: FormGroup;\r\n  submitted = false;\r\n  error = '';\r\n  success = '';\r\n  loading = false;\r\n  user !: UsuarioA;\r\n  // tslint:disable-next-line: max-line-length\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authService: AutenticacionService,\r\n    private modalService: NgbModal\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.resetForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.pattern(\"^[a-zA-Z0-9._%+-]+@ues\\.edu\\.sv$\")]],\r\n    });\r\n  }\r\n\r\n  get f() { return this.resetForm.controls; }\r\n\r\n\r\n  async enviarSolicitudRecuperacion(content: any) {\r\n    const correo = this.resetForm.get('email').value;\r\n    this.loading = true;\r\n    this.authService.recuperarContrasena(correo.toLowerCase()).subscribe(async (respuesta) => {\r\n      this.loading = false;\r\n      Swal.fire({\r\n        confirmButtonColor: \"#a90000\",\r\n        title: 'Éxito',\r\n        text:  'Código enviado, por favor revise su correo electrónico',\r\n        icon: 'success',\r\n      });\r\n      const dataSoli = await this.authService.obtenerUser(correo).toPromise();\r\n      this.user = dataSoli;\r\n      this.modalService.open(content, { size: '', keyboard: false, backdrop: 'static', centered: true });\r\n    },\r\n      (error) => {\r\n        this.loading = false;\r\n        if (error.status === 400) {\r\n         this.error =  'Correo electrónico no encontrado'\r\n        }\r\n        if (error.status === 406) {\r\n          this.error = 'Usuario inactivo'\r\n        }\r\n      });\r\n    if (this.resetForm.invalid) {\r\n      return;\r\n    }\r\n  }\r\n  esCampoValido(campo: string) {\r\n    const validarCampo = this.resetForm.get(campo);\r\n    return !validarCampo?.valid && validarCampo?.touched\r\n      ? \"is-invalid\"\r\n      : validarCampo?.touched\r\n        ? \"is-valid\"\r\n        : \"\";\r\n  }\r\n}\r\n","<div class=\"account-pages my-5 pt-sm-5\">\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-md-8 col-lg-6 col-xl-5\">\r\n        <div class=\"card overflow-hidden log\">\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"col-10 text-center mt-3\">\r\n              <img src=\"assets/images/minerva2.png\" alt=\"\" width=\"150\" class=\"img-fluid\">\r\n              <h2 class=\"mt-4 txtbl txtsm\">RECUPERACIÓN DE CONTRASEÑA</h2>\r\n            </div>\r\n          </div>\r\n          <div class=\"card-body pt-0 mt-5\">\r\n            <div class=\"form-container\">\r\n              <form class=\"needs-validation\" name=\"resetForm\" [formGroup]=\"resetForm\"\r\n                novalidate>\r\n                <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\r\n                <div class=\"mb-3\">\r\n                  <label for=\"email\">Correo electrónico</label>\r\n                  <input type=\"email\" formControlName=\"email\" class=\"form-control bg-light\"\r\n                    [class]=\"esCampoValido('email')\" id=\"email\" placeholder=\"Ingrese su correo\" />\r\n                  <div class=\"invalid-feedback\">\r\n                    <div *ngIf=\"resetForm.get('email')?.errors?.['required']\">Campo requerido</div>\r\n                    <div *ngIf=\"resetForm.get('email')?.errors?.['pattern']\">Debe ser un correo valido</div>\r\n                  </div>\r\n                </div>\r\n                <div *ngIf=\"loading\" class=\"spinner-overlay\"> <!-- Rueda de carga -->\r\n                  <div class=\"spinner-border text-primary\" role=\"status\">\r\n                    <span class=\"sr-only\">Cargando...</span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"text-center mt-5\">\r\n                  <button class=\"btn btn-dark w-md mb-5\" type=\"submit\"[disabled]=\"resetForm.invalid\"\r\n                  (click)=\"enviarSolicitudRecuperacion(op)\" routerLinkActive=\"active\">Enviar</button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ng-template #op>\r\n  <app-verifcarcod [user]=\"user\"></app-verifcarcod>\r\n</ng-template>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router, RouterState } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { ReserServiceService } from './service/reser-service.service';\r\nimport { ServiceUsuarioService } from 'src/app/pages/usuario/service/service-usuario.service';\r\nimport { Usuario } from 'src/app/pages/usuario/models/usuario';\r\nimport { UsuarioService } from './service/usuario.service';\r\nimport Swal from 'sweetalert2';\r\nimport { AutenticacionService } from '../login/service/autenticacion.service';\r\nimport { Credentials } from '../login/models/usuario';\r\n\r\n@Component({\r\n  selector: 'app-reset',\r\n  templateUrl: './reset.component.html',\r\n  styleUrls: ['./reset.component.scss']\r\n})\r\nexport class ResetComponent implements OnInit {\r\n\r\n\r\n  formulario: FormGroup;\r\n  submitted = false;\r\n  error = '';\r\n  success = '';\r\n  showLoading = false;\r\n  usuario!:Usuario;\r\n  psstype = 'password';\r\n  eye = 'mdi mdi-eye-off';\r\n  cred: Credentials = {\r\n    correo: '',\r\n    password: ''\r\n  };\r\n\r\n  correo:string;\r\n  constructor(private formBuilder: FormBuilder,\r\n    private usuarioService: ServiceUsuarioService,\r\n    private correoService: ReserServiceService,\r\n    private authService: AutenticacionService,) {\r\n\r\n    this.formulario=this.init();\r\n    // window.addEventListener('beforeunload', this.onBeforeUnload.bind(this));\r\n   }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n\r\n    this.correo=this.correoService.getCorreo()\r\n\r\n      try {\r\n        this.usuario = await this.usuarioService.obtenerUsuarioCorreo(this.correo).toPromise();\r\n\r\n      } catch (error) {\r\n        Swal.fire({\r\n          confirmButtonColor: \"#a90000\",\r\n          title: 'Advertencia',\r\n          text: `Ocurrió un problema`,\r\n          icon: 'warning',\r\n        });\r\n      }\r\n\r\n\r\n  }\r\n\r\n  private init(): FormGroup {\r\n    return this.formBuilder.group({\r\n      password: ['', [Validators.required]],\r\n      confirmpassword: ['', [Validators.required]],\r\n    });\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.formulario.controls; }\r\n\r\n  /**\r\n   * On submit form\r\n   */\r\n\r\n\r\n  reset(){\r\n const password = this.formulario.get('password').value\r\n const confirm = this.formulario.get('confirmpassword').value\r\n this.showLoading = true;\r\n\r\n    if(confirm=='' || password==''){\r\n      this.error = 'Contraseñas vacias';\r\n      this.showLoading = false;\r\n    }else if(confirm.length<8 || password.length<8){\r\n      this.error = 'La contraseña debe contener 8 caracteres mínimo';\r\n      this.showLoading = false;\r\n    }else if(password!=confirm){\r\n      this.error = 'Las contraseñas no coinciden';\r\n      this.showLoading = false;\r\n    }else if(!(/[A-Z]/.test(password))==true || !(/\\d/.test(password))==true){\r\n      this.error = 'La contraseña debe contener al menos una mayúscula y un número';\r\n      this.showLoading = false;\r\n    }else{\r\n      this.error = '';\r\n      if(password==confirm){\r\n        this.usuario.password=confirm;\r\n        this.usuarioService.editarContraseña(this.usuario).subscribe(resp => {\r\n          this.showLoading = false;\r\n          this.cred.correo=this.usuario.correo\r\n          this.cred.password=password\r\n          this.authService.login(this.cred).subscribe(resp=>{\r\n            Swal.fire({\r\n              confirmButtonColor: \"#a90000\",\r\n              title: 'Éxito',\r\n              text: 'Contraseña modificada correctamente',\r\n              icon: 'success',\r\n            });\r\n          })\r\n        }, (err) => {\r\n          Swal.fire({\r\n            confirmButtonColor: \"#a90000\",\r\n            title: 'Error',\r\n            text: `Algo fallo`,\r\n            icon: 'error',\r\n          });\r\n        })\r\n\r\n      }else{\r\n        Swal.fire({\r\n          confirmButtonColor: \"#a90000\",\r\n          title: 'Advertencia',\r\n          text: `Las contraseñas no coinciden`,\r\n          icon: 'warning',\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n    /**PARA ALTERNAR EL BOTON DE PASSWORD */\r\n    cambiar() {\r\n      this.psstype = this.psstype === 'text' ? 'password' : 'text';\r\n      this.eye = this.eye === 'mdi mdi-eye-outline' ? 'mdi mdi-eye-off' : 'mdi mdi-eye-outline';\r\n    }\r\n    // onBeforeUnload(event: BeforeUnloadEvent): void {\r\n    //   event.preventDefault();\r\n    //   event.returnValue = '¿Estás seguro de que quieres abandonar esta página? Los cambios no guardados se perderán. Podría ocasionar un error.';\r\n    // }\r\n    // ngOnDestroy(): void {\r\n    //   // Asegúrate de eliminar el evento cuando el componente se destruye\r\n    //   window.removeEventListener('beforeunload', this.onBeforeUnload.bind(this));\r\n    // }\r\n\r\n  }\r\n","<div class=\"account-pages my-5 pt-sm-5\">\r\n    <div class=\"container\">\r\n      <div class=\"row justify-content-center\">\r\n        <div class=\"col-md-8 col-lg-6 col-xl-5\">\r\n          <div class=\"card overflow-hidden log\">\r\n            <div class=\"row justify-content-center\">\r\n              <div class=\"col-7 text-center mt-3\">\r\n                <img src=\"assets/images/minerva2.png\" alt=\"\" width=\"150\"class=\"img-fluid\">\r\n                <h5 class=\"mt-4 txtbl\">MODIFICACIÓN DE CONTRASEÑA</h5>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body pt-0\">\r\n              <div class=\"p-2\">\r\n\r\n                <form [formGroup]=\"formulario\" (ngSubmit)=\"reset()\">\r\n                  <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\r\n                  <ngb-alert type=\"success\" *ngIf=\"success\" [dismissible]=\"false\">{{ success }}</ngb-alert>\r\n                  <div class=\"mb-3\">\r\n                    <label for=\"password\">Contraseña nueva</label>\r\n                    <div class=\"input-group auth-pass-inputgroup\">\r\n                      <input [type]=\"psstype\" class=\"form-control bg-light\" formControlName=\"password\" placeholder=\"Ingrese su nueva contraseña\"\r\n                        [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" aria-label=\"Password\"\r\n                        aria-describedby=\"password-addon\">\r\n\r\n                      <button class=\"btn btn-light ms-0\" type=\"button\" id=\"password-addon\" (click)=\"cambiar()\" >\r\n                        <i class={{eye}}></i></button>\r\n                      <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                        <span  *ngIf=\"f.password.errors.required\">Campo requerido</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"mb-3\">\r\n                    <label for=\"password\">Confirmar contraseña</label>\r\n                    <div class=\"input-group auth-pass-inputgroup\">\r\n\r\n                      <input [type]=\"psstype\" class=\"form-control bg-light\" formControlName=\"confirmpassword\" placeholder=\"Ingrese nuevamente su contraseña\"\r\n                        [ngClass]=\"{ 'is-invalid': submitted && f.confirmpassword.errors }\" aria-label=\"Password\"\r\n                        aria-describedby=\"password-addon\">\r\n\r\n                      <button class=\"btn btn-light ms-0\" type=\"button\" id=\"password-addon\" (click)=\"cambiar()\" >\r\n                        <i class={{eye}}></i></button>\r\n                      <div *ngIf=\"submitted && f.confirmpassword.errors\" class=\"invalid-feedback\">\r\n                        <span  *ngIf=\"f.confirmpassword.errors.required\">Campo requerido</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"mt-5 text-center\">\r\n                    <button class=\"btn btn-dark\">Modificar</button>\r\n                  </div>\r\n                </form>\r\n                <div *ngIf=\"showLoading\" class=\"spinner-overlay\">\r\n                <div  class=\"spinner-border text-primary m-1\" role=\"status\">\r\n                  <span class=\"sr-only\">Loading...</span>\r\n                </div>\r\n              </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReserServiceService {\r\n\r\n  correo:string;\r\n  constructor() { }\r\n\r\n\r\n  setCorreo(correo:string){\r\n    this.correo=correo;\r\n  }\r\n\r\n  getCorreo(){\r\n    return this.correo;\r\n  }\r\n\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { UsuarioA } from '../login/models/usuario';\r\nimport { AutenticacionService } from '../login/service/autenticacion.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ReserServiceService } from '../reset/service/reser-service.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-verifcarcod',\r\n  templateUrl: './verifcarcod.component.html',\r\n  styleUrls: ['./verifcarcod.component.scss']\r\n})\r\nexport class VerifcarcodComponent implements OnInit {\r\n  codigoR: string = '';\r\n  codigonoValido: boolean = false;\r\n  codigoExpirado: boolean = false;\r\n  error = '';\r\n  verForm: FormGroup;\r\n  @Input() user !: UsuarioA;\r\n  constructor(\r\n    private authService: AutenticacionService,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private resetService: ReserServiceService,\r\n    private modalService: NgbModal\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.verForm = this.fb.group({\r\n      cod: ['',],\r\n    });\r\n  }\r\n  get f() { return this.verForm.controls; }\r\n\r\n  codigoRecuperacionExpirado() {\r\n    const codigore = this.user.codigorecuperacion\r\n    this.codigoR = this.verForm.get('cod').value;\r\n    // Con backend\r\n    // if (this.codigoR != '') {\r\n    //     this.authService.verificarCodigo(this.user.id, this.codigoR).subscribe(data => {\r\n    //       console.log('El código de recuperación es válido');\r\n    //     }, err => {\r\n    //       if (err.status === 410) {\r\n    //         this.codigoExpirado = true\r\n    //         this.error = 'El código de recuperación ha expirado'\r\n    //       } else if (err.status === 400) {\r\n    //         this.codigonoValido = true\r\n    //         this.error = 'Código no valido'\r\n    //       } else {\r\n    //         this.codigonoValido = true\r\n    //         this.error = 'Ocurrió un error al verificar el código de recuperación'\r\n    //       }\r\n    //     })\r\n    // }\r\n\r\n    if (this.codigoR != '') {\r\n      const fechaActual = new Date();\r\n      const fechaExpiracion = this.user.expiracioncr\r\n      const fechaExacta = new Date(fechaExpiracion.toLocaleString('en-US', { timeZone: 'UTC' }));\r\n      const minutos = (fechaActual.getTime() - fechaExacta.getTime()) / (1000 * 60);\r\n      if (this.codigoR === codigore) {\r\n        if (minutos > 15) {\r\n          this.codigoExpirado = true\r\n          this.error = 'El código ha expirado'\r\n          return true;\r\n        } else {\r\n          this.resetService.setCorreo(this.user.correo)\r\n          this.modalService.dismissAll();\r\n          this.router.navigate(['/account/reset']);\r\n          return false;\r\n        }\r\n      } else {\r\n        this.error = 'Código no valido'\r\n      }\r\n      if (this.verForm.invalid) {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n","<div class=\"card overflow-hidden log\">\r\n  <div class=\"row justify-content-center\">\r\n    <div class=\"col-10 text-center mt-3\">\r\n      <img src=\"assets/images/minerva2.png\" alt=\"\" width=\"100\" class=\"img-fluid\">\r\n      <h2 class=\"mt-4 txtbl txtsm\">RECUPERACIÓN DE CONTRASEÑA</h2>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body pt-0 mt-3\">\r\n    <label>Hemos enviado un mensaje con un código al correo electrónico <strong>{{user.correo}}</strong>. Comprueba la bandeja de entrada\r\n      e ingresa el código proporcionado a continuación:</label>\r\n    <div class=\"form-container mt-3\">\r\n      <form class=\"needs-validation\" (ngSubmit)=\"codigoRecuperacionExpirado()\" name=\"resetForm\" [formGroup]=\"verForm\"\r\n        novalidate>\r\n        <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\r\n        <div class=\"mb-3\">\r\n          <label for=\"cod\">Código de recuperación</label>\r\n          <input type=\"cod\" formControlName=\"cod\" class=\"form-control bg-light\" id=\"cod\"\r\n            placeholder=\"\" />\r\n          <div class=\"invalid-feedback\">\r\n            <div *ngIf=\"verForm.get('cod')?.errors?.['required']\">Campo requerido</div>\r\n          <span *ngIf=\"codigonoValido\" class=\"text-danger\">{{error}}</span>\r\n          <span *ngIf=\"codigoExpirado\" class=\"text-danger\">{{error}}</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"text-center mt-5\">\r\n          <button class=\"btn btn-dark w-md mb-5\" type=\"submit\">Verificar</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n"],"names":[],"sourceRoot":"webpack:///"}