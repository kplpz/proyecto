{"version":3,"file":"src_app_pages_perfil_perfil_module_ts.js","mappings":"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","sources":["./src/app/pages/perfil/pages/editar-password/editar-password.component.ts","./src/app/pages/perfil/pages/editar-password/editar-password.component.html","./src/app/pages/perfil/pages/editar-usuario/editar-usuario.component.ts","./src/app/pages/perfil/pages/editar-usuario/editar-usuario.component.html","./src/app/pages/perfil/pages/mostrar/mostrar.component.ts","./src/app/pages/perfil/pages/mostrar/mostrar.component.html","./src/app/pages/perfil/pages/validar/validar.component.ts","./src/app/pages/perfil/pages/validar/validar.component.html","./src/app/pages/perfil/perfil-routing.module.ts","./src/app/pages/perfil/perfil.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Credentials } from 'src/app/account/auth/login/models/usuario';\r\nimport { AutenticacionService } from 'src/app/account/auth/login/service/autenticacion.service';\r\nimport { Usuario } from 'src/app/pages/usuario/models/usuario';\r\nimport { ServiceUsuarioService } from 'src/app/pages/usuario/service/service-usuario.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-editar-password',\r\n  templateUrl: './editar-password.component.html',\r\n  styleUrls: ['./editar-password.component.scss']\r\n})\r\nexport class EditarPasswordComponent implements OnInit {\r\n  formulario !: FormGroup\r\n  psstype = 'password';\r\n  eye = 'mdi mdi-eye-off';\r\n  user\r\n  usuario!:Usuario\r\n  cred: Credentials = {\r\n    correo: '',\r\n    password: ''\r\n  };\r\n  constructor(    private fb: FormBuilder,\r\n    private modalService: NgbModal,\r\n    private router: Router,\r\n    private authService: AutenticacionService,\r\n    private usuarioService:ServiceUsuarioService) {\r\n      this.formulario=this.init()\r\n     }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n\r\n    this.user = this.authService.getUserFromLocalCache();\r\n    try {\r\n      this.usuario = await this.usuarioService.obtenerUsuario(this.user.id).toPromise();\r\n\r\n    } catch (error) {\r\n      Swal.fire({\r\n        confirmButtonColor: \"#a90000\",\r\n        title: 'Advertencia',\r\n        text: `Ocurrió un problema`,\r\n        icon: 'warning',\r\n      });\r\n    }\r\n  }\r\n\r\n  private init(): FormGroup {\r\n    return this.fb.group({\r\n      password: ['', [Validators.required, Validators.minLength(8)]],\r\n      newpassword: ['', [Validators.required, Validators.minLength(8)]],\r\n      confirmpassword: ['', [Validators.required, Validators.minLength(8)]]\r\n  });\r\n  }\r\n\r\n  modificar(){\r\n    this.cred.correo=this.usuario.correo\r\n    this.cred.password=this.formulario.get('password').value\r\n    const nueva=this.formulario.get('newpassword').value\r\n    const confirm=this.formulario.get('confirmpassword').value\r\n    this.authService.login2(this.cred).subscribe((response) => {\r\n\r\n      if(nueva==confirm){\r\n        if((/[A-Z]/.test(confirm))==true && (/\\d/.test(confirm))==true){\r\n          this.usuario.password=confirm\r\n          this.usuarioService.editarContraseña(this.usuario).subscribe(resp=>{\r\n            Swal.fire({\r\n              confirmButtonColor: \"#a90000\",\r\n              title: 'Éxito',\r\n              text: `Modificado correctamente`,\r\n              icon: 'success',\r\n            });\r\n                this.router.navigateByUrl('/perfil/datos');\r\n\r\n          })\r\n        }else{\r\n          Swal.fire({\r\n            confirmButtonColor: \"#a90000\",\r\n            title: 'Advertencia',\r\n            text:  'La contraseña debe contener al menos una mayúscula y un número',\r\n            icon: 'warning',\r\n          });\r\n        }\r\n      }else{\r\n        Swal.fire({\r\n          confirmButtonColor: \"#a90000\",\r\n          title: 'Advertencia',\r\n          text:  'Las contraseñas no coinciden',\r\n          icon: 'warning',\r\n        });\r\n      }\r\n    },err => {\r\n        if (err.status == 400) {\r\n          Swal.fire({\r\n            confirmButtonColor: \"#a90000\",\r\n            title: 'Contraseña inválida',\r\n            text:   'Por favor, ingrese su contraseña',\r\n            icon: 'warning',\r\n          });\r\n        }\r\n\r\n\r\n      });\r\n  }\r\n      /**PARA ALTERNAR EL BOTON DE PASSWORD */\r\n      cambiar() {\r\n        this.psstype = this.psstype === 'text' ? 'password' : 'text';\r\n        this.eye = this.eye === 'mdi mdi-eye-outline' ? 'mdi mdi-eye-off' : 'mdi mdi-eye-outline';\r\n    }\r\n\r\n  esCampoValido(campo: string) {\r\n    const validarCampo = this.formulario.get(campo)\r\n    return !validarCampo?.valid && validarCampo?.touched\r\n      ? 'is-invalid' : validarCampo?.touched ? 'is-valid' : '';\r\n  }\r\n  openModalA(content) {\r\n    this.modalService.open(content, { keyboard: false, scrollable: true, size: 'lg' });\r\n  }\r\n\r\n\r\n}\r\n","<app-loader></app-loader>\r\n<div class=\"container-fluid\">\r\n    <app-page-title title=\"Contraseña\"></app-page-title>\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-3\">\r\n                <label class=\"text-danger mb-4\"> * Campo obligatorio</label>\r\n              </div>\r\n              <div class=\"col-sm-8\">\r\n                <!-- Form -->\r\n                <form [formGroup]=\"formulario\" (ngSubmit)=\"modificar()\">\r\n                  <div class=\"row mb-5\">\r\n                <div class=\"col-sm-8 text-start\">\r\n                  <label for=\"password\">Contraseña</label><span class=\"text-danger\"> *</span>\r\n                  <div class=\"input-group auth-pass-inputgroup\">\r\n                    <input [type]=\"psstype\" class=\"form-control bg-light\" formControlName=\"password\" placeholder=\"Ingrese contraseña actual\"\r\n                       aria-label=\"Password\"\r\n                      aria-describedby=\"password-addon\" [class]=\"esCampoValido('password')\">\r\n\r\n                    <button class=\"btn btn-light ms-0\" type=\"button\" id=\"password-addon\" (click)=\"cambiar()\" >\r\n                      <i class={{eye}}></i></button>\r\n                      <div class=\"invalid-feedback\">\r\n                        <span *ngIf=\"formulario.get('password')?.errors?.['required']\">Campo requerido </span>\r\n                        <span *ngIf=\"formulario.get('password')?.errors?.['minlength']\">8 caracteres mínimo </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-8 text-start\">\r\n                    <label for=\"password\">Nueva contraseña</label><span class=\"text-danger\"> *</span>\r\n                    <div class=\"input-group auth-pass-inputgroup\">\r\n                      <input [type]=\"psstype\" class=\"form-control bg-light\" formControlName=\"newpassword\" placeholder=\"Ingrese nueva contraseña\"\r\n                         aria-label=\"Password\"\r\n                        aria-describedby=\"password-addon\" [class]=\"esCampoValido('newpassword')\">\r\n\r\n                      <button class=\"btn btn-light ms-0\" type=\"button\" id=\"password-addon\" (click)=\"cambiar()\" >\r\n                        <i class={{eye}}></i></button>\r\n                        <div class=\"invalid-feedback\">\r\n                          <span *ngIf=\"formulario.get('newpassword')?.errors?.['required']\">Campo requerido </span>\r\n                          <span *ngIf=\"formulario.get('newpassword')?.errors?.['minlength']\">8 caracteres mínimo </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-sm-8 text-start\">\r\n                    <label for=\"password\">Confirmar contraseña</label><span class=\"text-danger\"> *</span>\r\n                    <div class=\"input-group auth-pass-inputgroup\">\r\n                      <input [type]=\"psstype\" class=\"form-control bg-light\" formControlName=\"confirmpassword\" placeholder=\"Confirme su nueva contraseña\"\r\n                         aria-label=\"Password\"\r\n                        aria-describedby=\"password-addon\" [class]=\"esCampoValido('confirmpassword')\">\r\n\r\n                      <button class=\"btn btn-light ms-0\" type=\"button\" id=\"password-addon\" (click)=\"cambiar()\" >\r\n                        <i class={{eye}}></i></button>\r\n                        <div class=\"invalid-feedback\">\r\n                          <span *ngIf=\"formulario.get('confirmpassword')?.errors?.['required']\">Campo requerido </span>\r\n                          <span *ngIf=\"formulario.get('confirmpassword')?.errors?.['minlength']\">8 caracteres mínimo </span>\r\n                         </div>\r\n                    </div>\r\n                  </div>\r\n                    <br>\r\n                    <br>\r\n                    <br>\r\n                    <br>\r\n                    <div class=\"col-sm-7 text-center\">\r\n                      <button class=\"btn btn-info bg-gradient\" [disabled]=\"!formulario.valid\">\r\n                        Modificar</button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <!-- End Form -->\r\n              </div>\r\n              <div class=\"col-sm-1 text-end\">\r\n                <button type=\"button\" class=\"btn btn-info btn-icon rounded-circle btn-transparent\" data-toggle=\"tooltip\"\r\n                  ngbTooltip=\"Ayuda\" data-placement=\"end\" style=\"margin-right: +35px;\" (click)=\"openModalA(ayuda)\">\r\n                  <i class=\"fa fa-question-circle fa-lg\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- End Table -->\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- MODAL AYUDA-->\r\n  <ng-template #ayuda let-modal>\r\n    <div class=\"modal-header bg\">\r\n      <h1 class=\"modal-title text-white\">Ayuda</h1>\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\"></button>\r\n    </div>\r\n    <div class=\"modal-body text-justify\">\r\n      <div>\r\n        <h2 style=\"margin-bottom: 15px;\">Ventana de Información</h2>\r\n      </div>\r\n      <label class=\"fs-5\"><strong>¿Cómo utilizar esta página?</strong></label>\r\n      <p style=\"font-size: 15px;\">Con el botón <strong>Modificar</strong> editamos la contraseña de nuestro usuario de acceso al sistema.</p>\r\n      <p style=\"font-size: 15px;\">Debe de ingresar su <strong>Contraseña</strong> actual para validar los cambios.\r\n      </p>\r\n      <p style=\"font-size: 15px;\">Posteriormente debe de ingresar su <strong>Nueva Contraseña</strong> que será su nueva contraseña para su cuenta de usuario.\r\n      </p>\r\n      <p style=\"font-size: 15px;\">Finalmente debe de <strong>Confirmar Contraseña</strong> usted debe de confirmar su nueva contraseña para tener la seguridad de los nuevos cambios en ella.\r\n      </p>\r\n\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-dark\" (click)=\"modal.close('Close click')\">Cerrar</button>\r\n    </div>\r\n  </ng-template>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AutenticacionService } from 'src/app/account/auth/login/service/autenticacion.service';\r\nimport { isCaracter } from 'src/app/constantes/constantesproyecto';\r\nimport { Usuario } from 'src/app/pages/usuario/models/usuario';\r\nimport { ServiceUsuarioService } from 'src/app/pages/usuario/service/service-usuario.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-editar-usuario',\r\n  templateUrl: './editar-usuario.component.html',\r\n  styleUrls: ['./editar-usuario.component.scss']\r\n})\r\nexport class EditarUsuarioComponent implements OnInit {\r\n  breadCrumbItems: Array<{}>;\r\n  formulario !: FormGroup\r\n  user\r\n  usuario!:Usuario\r\n  showLoading = false;\r\n  constructor(private fb: FormBuilder,\r\n    private modalService: NgbModal,\r\n    private router: Router,\r\n    private authService: AutenticacionService,\r\n    private usuarioService:ServiceUsuarioService) {\r\n    this.formulario=this.init()\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.breadCrumbItems = [{ label: 'Listado' }];\r\n    this.user = this.authService.getUserFromLocalCache();\r\n\r\n    try {\r\n      this.usuario = await this.usuarioService.obtenerUsuario(this.user.id).toPromise();\r\n\r\n    } catch (error) {\r\n      Swal.fire({\r\n        confirmButtonColor: \"#a90000\",\r\n        title: 'Advertencia',\r\n        text: `Ocurrió un problema`,\r\n        icon: 'warning',\r\n      });\r\n    }\r\n    this.formulario.reset()\r\n    this.formulario.get(\"nombreusuario\").setValue(this.usuario.nombreusuario);\r\n\r\n  }\r\n\r\n  private init(): FormGroup {\r\n    return this.fb.group({\r\n      nombreusuario: ['', [Validators.required, Validators.minLength(4), Validators.pattern(isCaracter)]]\r\n    })\r\n  }\r\n\r\n  esCampoValido(campo: string) {\r\n    const validarCampo = this.formulario.get(campo)\r\n    return !validarCampo?.valid && validarCampo?.touched\r\n      ? 'is-invalid' : validarCampo?.touched ? 'is-valid' : '';\r\n  }\r\n\r\n  editar(){\r\n    const usuario:string = this.formulario.get('nombreusuario').value\r\n\r\n    this.usuarioService.setUsuario(usuario);\r\n    this.router.navigateByUrl('perfil/verificar');\r\n  }\r\n\r\n  openModalA(content) {\r\n    this.modalService.open(content, { keyboard: false, scrollable: true, size: 'lg' });\r\n  }\r\n\r\n}\r\n","<app-loader></app-loader>\r\n<div class=\"container-fluid\">\r\n    <app-page-title title=\"Usuario\" [breadcrumbItems]=\"breadCrumbItems\"></app-page-title>\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-3\">\r\n                <label class=\"text-danger mb-4\"> * Campo obligatorio</label>\r\n              </div>\r\n              <div class=\"col-sm-8\">\r\n                <!-- Form -->\r\n                <form [formGroup]=\"formulario\" (ngSubmit)=\"editar()\">\r\n                  <div class=\"row mb-5\">\r\n                    <div class=\"col-sm-5 text-start\">\r\n                      <label>Nombre usuario</label><span class=\"text-danger\"> *</span>\r\n                      <input type=\"text\" class=\"form-control\" name=\"nombreusuario\" autocomplete=\"off\"\r\n                        formControlName=\"nombreusuario\" [class]=\"esCampoValido('nombreusuario')\" />\r\n                      <div class=\"invalid-feedback\">\r\n                        <span *ngIf=\"formulario.get('nombreusuario')?.errors?.['required']\">Campo requerido </span>\r\n                        <span *ngIf=\"formulario.get('nombreusuario')?.errors?.['pattern']\">No se permiten caracteres\r\n                          especiales </span>\r\n                        <span *ngIf=\"formulario.get('nombreusario')?.errors?.['minlength']\">4 caracteres mínimo </span>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3 mt-4 ms-4\">\r\n                      <button class=\"btn btn-info bg-gradient\" [disabled]=\"!formulario.valid\">\r\n                        Editar</button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <!-- End Form -->\r\n              </div>\r\n              <div class=\"col-sm-1 text-end\">\r\n                <button type=\"button\" class=\"btn btn-info btn-icon rounded-circle btn-transparent\" data-toggle=\"tooltip\"\r\n                  ngbTooltip=\"Ayuda\" data-placement=\"end\" style=\"margin-right: +35px;\" (click)=\"openModalA(ayuda)\">\r\n                  <i class=\"fa fa-question-circle fa-lg\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- End Table -->\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- MODAL AYUDA-->\r\n  <ng-template #ayuda let-modal>\r\n    <div class=\"modal-header bg\">\r\n      <h1 class=\"modal-title text-white\">Ayuda</h1>\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\"></button>\r\n    </div>\r\n    <div class=\"modal-body text-justify\">\r\n      <div>\r\n        <h2 style=\"margin-bottom: 15px;\">Ventana de Información</h2>\r\n      </div>\r\n      <label class=\"fs-5\"><strong>¿Cómo utilizar esta página?</strong></label>\r\n      <p style=\"font-size: 15px;\">Con el botón <strong>Editar</strong> modificamos nuestro nombre usuario en el sistema.</p>\r\n      <p style=\"font-size: 15px;\">Para editar se debe modificar el texto con el nombre de usuario actual por el que nuevo que usted desea y dar presionar el botón\r\n        <strong>Editar</strong>.\r\n      </p>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-dark\" (click)=\"modal.close('Close click')\">Cerrar</button>\r\n    </div>\r\n  </ng-template>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AutenticacionService } from 'src/app/account/auth/login/service/autenticacion.service';\r\nimport { Usuario } from 'src/app/pages/usuario/models/usuario';\r\nimport { ServiceUsuarioService } from 'src/app/pages/usuario/service/service-usuario.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-mostrar',\r\n  templateUrl: './mostrar.component.html',\r\n  styleUrls: ['./mostrar.component.scss']\r\n})\r\nexport class MostrarComponent implements OnInit {\r\n  user\r\n  usuario!:Usuario\r\n  constructor(private authService: AutenticacionService, private usuarioService:ServiceUsuarioService) { }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.user = this.authService.getUserFromLocalCache();\r\n    try {\r\n      this.usuario = await this.usuarioService.obtenerUsuario(this.user.id).toPromise();\r\n      \r\n    } catch (error) {\r\n      Swal.fire({\r\n        confirmButtonColor: \"#a90000\",\r\n        title: 'Advertencia',\r\n        text: `Ocurrió un problema`,\r\n        icon: 'warning',\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<app-loader></app-loader>\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div class=\"page-title-box d-flex align-items-center justify-content-between\">\r\n        <h4 class=\"mb-0 font-size-18\">BIENVENIDO</h4>\r\n        <div class=\"page-title-right\">\r\n          <ol class=\"breadcrumb m-0\">\r\n            <li class=\"breadcrumb-item active\"></li>\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n \r\n  <div class=\"row\">\r\n      <div class=\"col-sm-6\">\r\n        <div class=\"card\">\r\n        <div class=\"card-body\">\r\n            <div class=\"card-icon text-center\">\r\n                <i class=\"bx bx-user bx-lg\"></i>\r\n              </div>\r\n          <h5 class=\"card-title\">Usuario</h5>\r\n          <p class=\"card-text\">El nombre de usuario es como usted se identifica dentro del sistema.</p>\r\n          <h5 class=\"text-center\" style=\"font-weight: bold;\" *ngIf=\"usuario && usuario.nombreusuario\">{{usuario.nombreusuario}}</h5>\r\n          <a routerLink=\"/perfil/editarusuario\" class=\"btn btn-primary\">Editar</a>\r\n        </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div class=\"card-icon text-center\">\r\n                    <i class=\"bx bx-key bx-lg\"></i>\r\n                  </div>\r\n              <h5 class=\"card-title\">Contraseña</h5>\r\n              <p class=\"card-text\">La contraseña es su clave de seguridad secreta para acceder a su cuenta de usuario.</p>\r\n              <a routerLink=\"/perfil/editarcontraseña\" class=\"btn btn-primary\">Editar</a>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-6\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div class=\"card-icon text-center\">\r\n                    <i class=\"bx bx-mail-send bx-lg\"></i>\r\n                  </div>\r\n              <h5 class=\"card-title\">Correo Electrónico</h5>\r\n              <p class=\"card-text\">El correo electrónico es al cual usted recibirá los códigos para cambio de contraseña en caso de olvido.</p>\r\n              <h5 class=\"text-center\" style=\"font-weight: bold;\" *ngIf=\"usuario && usuario.correo\">{{usuario.correo}}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"col-sm-6\">\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"card-icon text-center\">\r\n                        <i class=\"bx bx-shield-quarter bx-lg\"></i>\r\n                      </div>\r\n                  <h5 class=\"card-title\">Rol</h5>\r\n                  <p class=\"card-text\">El rol define a que secciones del sistema usted tendrá acceso.</p>\r\n                  <h5 class=\"text-center\" style=\"font-weight: bold;\" *ngIf=\"usuario && usuario.role\">{{ usuario.role === 'ROLE_SUPER_ADMIN' ? 'Super Admin' :  (usuario.role === 'ROLE_ADMIN_REDES' ? 'Admin Redes' : (usuario.role === 'ROLE_ESTUDIANTE' ? 'Estudiante' : 'Pasante')) }}</h5>\r\n                </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Credentials } from 'src/app/account/auth/login/models/usuario';\r\nimport { AutenticacionService } from 'src/app/account/auth/login/service/autenticacion.service';\r\nimport { Usuario } from 'src/app/pages/usuario/models/usuario';\r\nimport { ServiceUsuarioService } from 'src/app/pages/usuario/service/service-usuario.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-validar',\r\n  templateUrl: './validar.component.html',\r\n  styleUrls: ['./validar.component.scss']\r\n})\r\nexport class ValidarComponent implements OnInit {\r\n  formulario !: FormGroup\r\n  submitted = false;\r\n  psstype = 'password';\r\n  eye = 'mdi mdi-eye-off';\r\n  useredit: string\r\n  user\r\n  showLoading = false\r\n  usuario!: Usuario\r\n  cred: Credentials = {\r\n    correo: '',\r\n    password: ''\r\n  };\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private modalService: NgbModal,\r\n    private router: Router,\r\n    private authService: AutenticacionService,\r\n    private usuarioService: ServiceUsuarioService) {\r\n    this.formulario = this.init()\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.useredit = this.usuarioService.getUsuario()\r\n    this.user = this.authService.getUserFromLocalCache();\r\n    try {\r\n      this.usuario = await this.usuarioService.obtenerUsuario(this.user.id).toPromise();\r\n\r\n    } catch (error) {\r\n      console.error('Error al obtener el usuario: ', error);\r\n    }\r\n  }\r\n\r\n  private init(): FormGroup {\r\n    return this.fb.group({\r\n      password: ['', [Validators.required, Validators.minLength(8)]]\r\n    })\r\n  }\r\n  get f() { return this.formulario.controls; }\r\n\r\n  verificar() {\r\n    this.showLoading = true\r\n    this.cred.correo = this.usuario.correo\r\n    this.cred.password = this.formulario.get('password').value\r\n    this.authService.login2(this.cred).subscribe((response) => {\r\n      if (this.useredit) {\r\n        this.usuario.nombreusuario = this.useredit\r\n        this.usuarioService.editar(this.usuario).subscribe(resp => {\r\n          this.showLoading = false\r\n          Swal.fire({\r\n            confirmButtonColor: \"#a90000\",\r\n            title: 'Éxito',\r\n            text: `Modificado correctamente`,\r\n            icon: 'success',\r\n          }).then(() => {\r\n            //this.router.navigate(['/perfil/datos']);\r\n            window.location.replace('perfil/datos');\r\n          });\r\n        })\r\n      } else {\r\n        this.showLoading = false\r\n        Swal.fire({\r\n          confirmButtonColor: \"#a90000\",\r\n          title: 'Error',\r\n          text: 'Algo ocurrió',\r\n          icon: 'error',\r\n        });\r\n      }\r\n\r\n    }, err => {\r\n      if (err.status == 400) {\r\n        this.showLoading = false\r\n        Swal.fire({\r\n          confirmButtonColor: \"#a90000\",\r\n          title: 'Contraseña inválida',\r\n          text: 'Por favor, ingrese su contraseña',\r\n          icon: 'warning',\r\n        });\r\n\r\n      }\r\n\r\n\r\n    });\r\n  }\r\n  /**PARA ALTERNAR EL BOTON DE PASSWORD */\r\n  cambiar() {\r\n    this.psstype = this.psstype === 'text' ? 'password' : 'text';\r\n    this.eye = this.eye === 'mdi mdi-eye-outline' ? 'mdi mdi-eye-off' : 'mdi mdi-eye-outline';\r\n  }\r\n\r\n  esCampoValido(campo: string) {\r\n    const validarCampo = this.formulario.get(campo)\r\n    return !validarCampo?.valid && validarCampo?.touched\r\n      ? 'is-invalid' : validarCampo?.touched ? 'is-valid' : '';\r\n  }\r\n\r\n  openModalA(content) {\r\n    this.modalService.open(content, { keyboard: false, scrollable: true, size: 'lg' });\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <app-page-title title=\"Contraseña\"></app-page-title>\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-3\">\r\n                <label class=\"text-danger mb-4\"> * Campo obligatorio</label>\r\n              </div>\r\n              <div class=\"col-sm-8\">\r\n                <!-- Form -->\r\n                <form [formGroup]=\"formulario\" (ngSubmit)=\"verificar()\">\r\n                  <div class=\"row mb-5\">\r\n                <div class=\"col-sm-7 text-start\">\r\n                  <label for=\"password\">Contraseña</label><span class=\"text-danger\"> *</span>\r\n                  <div class=\"input-group auth-pass-inputgroup\">\r\n                    <input [type]=\"psstype\" class=\"form-control bg-light\" formControlName=\"password\" placeholder=\"Ingrese contraseña\"\r\n                       aria-label=\"Password\"\r\n                      aria-describedby=\"password-addon\" [class]=\"esCampoValido('password')\">\r\n\r\n                    <button class=\"btn btn-light ms-0\" type=\"button\" id=\"password-addon\" (click)=\"cambiar()\" >\r\n                      <i class={{eye}}></i></button>\r\n                      <div class=\"invalid-feedback\">\r\n                        <span *ngIf=\"formulario.get('password')?.errors?.['required']\">Campo requerido </span>\r\n                        <span *ngIf=\"formulario.get('password')?.errors?.['minlength']\">8 caracteres mínimo </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                    <div class=\"col-sm-3 mt-4 ms-4\">\r\n                      <button class=\"btn btn-info bg-gradient\" [disabled]=\"!formulario.valid\">\r\n                        Verificar</button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <!-- End Form -->\r\n              </div>\r\n              <div *ngIf=\"showLoading\" class=\"spinner-overlay\">\r\n                <div  class=\"spinner-border text-primary m-1\" role=\"status\">\r\n                  <span class=\"sr-only\">Loading...</span>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-sm-1 text-end\">\r\n                <button type=\"button\" class=\"btn btn-info btn-icon rounded-circle btn-transparent\" data-toggle=\"tooltip\"\r\n                  ngbTooltip=\"Ayuda\" data-placement=\"end\" style=\"margin-right: +35px;\" (click)=\"openModalA(ayuda)\">\r\n                  <i class=\"fa fa-question-circle fa-lg\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- End Table -->\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- MODAL AYUDA-->\r\n  <ng-template #ayuda let-modal>\r\n    <div class=\"modal-header bg\">\r\n      <h1 class=\"modal-title text-white\">Ayuda</h1>\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\"></button>\r\n    </div>\r\n    <div class=\"modal-body text-justify\">\r\n      <div>\r\n        <h2 style=\"margin-bottom: 15px;\">Ventana de Información</h2>\r\n      </div>\r\n      <label class=\"fs-5\"><strong>¿Cómo utilizar esta página?</strong></label>\r\n      <p style=\"font-size: 15px;\">Con el botón <strong>Verificar</strong> verificaremos que su contraseña sea correcta.</p>\r\n      <p style=\"font-size: 15px;\">Para editar el nombre de usuario usted debe de ingresar su contraseña para validar los nuevos cambios.\r\n      </p>\r\n\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-dark\" (click)=\"modal.close('Close click')\">Cerrar</button>\r\n    </div>\r\n  </ng-template>\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MostrarComponent } from './pages/mostrar/mostrar.component';\r\nimport { EditarUsuarioComponent } from './pages/editar-usuario/editar-usuario.component';\r\nimport { VerifcarcodComponent } from 'src/app/account/auth/verifcarcod/verifcarcod.component';\r\nimport { ValidarComponent } from './pages/validar/validar.component';\r\nimport { EditarPasswordComponent } from './pages/editar-password/editar-password.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'datos', component: MostrarComponent },\r\n  { path: 'editarusuario', component: EditarUsuarioComponent },\r\n  { path: 'verificar', component: ValidarComponent },\r\n  { path: 'editarcontraseña', component: EditarPasswordComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PerfilRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PerfilRoutingModule } from './perfil-routing.module';\r\nimport { MostrarComponent } from './pages/mostrar/mostrar.component';\r\nimport { UIModule } from \"../../shared/ui/ui.module\";\r\nimport { WidgetModule } from \"../../shared/widget/widget.module\";\r\nimport { EditarUsuarioComponent } from './pages/editar-usuario/editar-usuario.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ValidarComponent } from './pages/validar/validar.component';\r\nimport { EditarPasswordComponent } from './pages/editar-password/editar-password.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        MostrarComponent,\r\n        EditarUsuarioComponent,\r\n        ValidarComponent,\r\n        EditarPasswordComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        PerfilRoutingModule,\r\n        UIModule,\r\n        WidgetModule,\r\n        ReactiveFormsModule,\r\n        NgbModule,\r\n        FormsModule,\r\n        HttpClientModule\r\n    ]\r\n})\r\nexport class PerfilModule { }\r\n"],"names":[],"sourceRoot":"webpack:///"}